// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.24.4
// source: twicmd.proto

package twicmdproto

import (
	twismsproto "github.com/twipi/twipi/proto/out/twismsproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandArgumentHint int32

const (
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_UNSPECIFIED  CommandArgumentHint = 0
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_STRING       CommandArgumentHint = 1
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_NUMBER       CommandArgumentHint = 2
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_INTEGER      CommandArgumentHint = 3
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_PERSON       CommandArgumentHint = 4
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_EMAIL        CommandArgumentHint = 5
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_PHONE_NUMBER CommandArgumentHint = 6
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_ADDRESS      CommandArgumentHint = 7 // ...
)

// Enum value maps for CommandArgumentHint.
var (
	CommandArgumentHint_name = map[int32]string{
		0: "COMMAND_ARGUMENT_HINT_UNSPECIFIED",
		1: "COMMAND_ARGUMENT_HINT_STRING",
		2: "COMMAND_ARGUMENT_HINT_NUMBER",
		3: "COMMAND_ARGUMENT_HINT_INTEGER",
		4: "COMMAND_ARGUMENT_HINT_PERSON",
		5: "COMMAND_ARGUMENT_HINT_EMAIL",
		6: "COMMAND_ARGUMENT_HINT_PHONE_NUMBER",
		7: "COMMAND_ARGUMENT_HINT_ADDRESS",
	}
	CommandArgumentHint_value = map[string]int32{
		"COMMAND_ARGUMENT_HINT_UNSPECIFIED":  0,
		"COMMAND_ARGUMENT_HINT_STRING":       1,
		"COMMAND_ARGUMENT_HINT_NUMBER":       2,
		"COMMAND_ARGUMENT_HINT_INTEGER":      3,
		"COMMAND_ARGUMENT_HINT_PERSON":       4,
		"COMMAND_ARGUMENT_HINT_EMAIL":        5,
		"COMMAND_ARGUMENT_HINT_PHONE_NUMBER": 6,
		"COMMAND_ARGUMENT_HINT_ADDRESS":      7,
	}
)

func (x CommandArgumentHint) Enum() *CommandArgumentHint {
	p := new(CommandArgumentHint)
	*p = x
	return p
}

func (x CommandArgumentHint) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandArgumentHint) Descriptor() protoreflect.EnumDescriptor {
	return file_twicmd_proto_enumTypes[0].Descriptor()
}

func (CommandArgumentHint) Type() protoreflect.EnumType {
	return &file_twicmd_proto_enumTypes[0]
}

func (x CommandArgumentHint) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandArgumentHint.Descriptor instead.
func (CommandArgumentHint) EnumDescriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{0}
}

// A service that provides commands to be executed.
type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the service. Each service registers its own single-word name,
	// usually the brand name, to be used in this.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The list of descriptions of commands that the service provides.
	Commands []*CommandDescription `protobuf:"bytes,2,rep,name=commands,proto3" json:"commands,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{0}
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service) GetCommands() []*CommandDescription {
	if x != nil {
		return x.Commands
	}
	return nil
}

// A description of a command that the service provides.
// It mostly contains human-readable information about the command, but some
// data may be used by the natural language processor.
type CommandDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the slash command.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The map of named arguments that the command accepts.
	Arguments map[string]*CommandArgumentDescription `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The order in which the named arguments are expected.
	// This is only useful for positional parsing.
	// Such a parser must also implement a fallback name=value parser.
	ArgumentPositions []string `protobuf:"bytes,3,rep,name=argument_positions,json=argumentPositions,proto3" json:"argument_positions,omitempty"`
	// Whether the command accepts a trailing argument at the end.
	// The last argument in the positions list is considered trailing.
	// This is only meaningful if argument_positions is set.
	ArgumentTrailing bool `protobuf:"varint,4,opt,name=argument_trailing,json=argumentTrailing,proto3" json:"argument_trailing,omitempty"`
}

func (x *CommandDescription) Reset() {
	*x = CommandDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandDescription) ProtoMessage() {}

func (x *CommandDescription) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandDescription.ProtoReflect.Descriptor instead.
func (*CommandDescription) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{1}
}

func (x *CommandDescription) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommandDescription) GetArguments() map[string]*CommandArgumentDescription {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *CommandDescription) GetArgumentPositions() []string {
	if x != nil {
		return x.ArgumentPositions
	}
	return nil
}

func (x *CommandDescription) GetArgumentTrailing() bool {
	if x != nil {
		return x.ArgumentTrailing
	}
	return false
}

// A description of a command argument within a command.
type CommandArgumentDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether the argument is required.
	Required bool `protobuf:"varint,1,opt,name=required,proto3" json:"required,omitempty"`
	// The human-readable description of the argument.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The hint that the parser will use.
	// The NLP will also use it to determine the argument's context.
	Hint CommandArgumentHint `protobuf:"varint,3,opt,name=hint,proto3,enum=twicmd.CommandArgumentHint" json:"hint,omitempty"`
}

func (x *CommandArgumentDescription) Reset() {
	*x = CommandArgumentDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandArgumentDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandArgumentDescription) ProtoMessage() {}

func (x *CommandArgumentDescription) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandArgumentDescription.ProtoReflect.Descriptor instead.
func (*CommandArgumentDescription) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{2}
}

func (x *CommandArgumentDescription) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *CommandArgumentDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CommandArgumentDescription) GetHint() CommandArgumentHint {
	if x != nil {
		return x.Hint
	}
	return CommandArgumentHint_COMMAND_ARGUMENT_HINT_UNSPECIFIED
}

// A command to be executed sent by the user.
type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service   string             `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Command   string             `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Arguments []*CommandArgument `protobuf:"bytes,3,rep,name=arguments,proto3" json:"arguments,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{3}
}

func (x *Command) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Command) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Command) GetArguments() []*CommandArgument {
	if x != nil {
		return x.Arguments
	}
	return nil
}

// A command argument.
type CommandArgument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CommandArgument) Reset() {
	*x = CommandArgument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandArgument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandArgument) ProtoMessage() {}

func (x *CommandArgument) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandArgument.ProtoReflect.Descriptor instead.
func (*CommandArgument) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{4}
}

func (x *CommandArgument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommandArgument) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// The request sent on the POST /execute endpoint.
type ExecuteCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command *Command             `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Message *twismsproto.Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ExecuteCommandRequest) Reset() {
	*x = ExecuteCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteCommandRequest) ProtoMessage() {}

func (x *ExecuteCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteCommandRequest.ProtoReflect.Descriptor instead.
func (*ExecuteCommandRequest) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{5}
}

func (x *ExecuteCommandRequest) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ExecuteCommandRequest) GetMessage() *twismsproto.Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// The response sent back to the user after executing a command.
type ExecuteCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body *twismsproto.MessageBody `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *ExecuteCommandResponse) Reset() {
	*x = ExecuteCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteCommandResponse) ProtoMessage() {}

func (x *ExecuteCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteCommandResponse.ProtoReflect.Descriptor instead.
func (*ExecuteCommandResponse) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{6}
}

func (x *ExecuteCommandResponse) GetBody() *twismsproto.MessageBody {
	if x != nil {
		return x.Body
	}
	return nil
}

var File_twicmd_proto protoreflect.FileDescriptor

var file_twicmd_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x74, 0x77, 0x69, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x74, 0x77, 0x69, 0x63, 0x6d, 0x64, 0x1a, 0x0c, 0x74, 0x77, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x55, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x77, 0x69, 0x63, 0x6d, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x22, 0xaf, 0x02, 0x0a, 0x12,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x77, 0x69, 0x63,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x2d, 0x0a, 0x12, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x61, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b,
	0x0a, 0x11, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6c,
	0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x72, 0x67, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x1a, 0x60, 0x0a, 0x0e, 0x41,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x74, 0x77, 0x69, 0x63, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8b, 0x01,
	0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x04, 0x68, 0x69,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x74, 0x77, 0x69, 0x63, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x22, 0x74, 0x0a, 0x07, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x61, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x74, 0x77, 0x69, 0x63, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x3b, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6d,
	0x0a, 0x15, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x77, 0x69, 0x63, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x77, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x41, 0x0a,
	0x16, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x77, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x2a, 0xb1, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x4f, 0x4d, 0x4d,
	0x41, 0x4e, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x49, 0x4e,
	0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x48, 0x49, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x52, 0x47,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x49, 0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45,
	0x52, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41,
	0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x49, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x47, 0x45, 0x52, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e,
	0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x49, 0x4e, 0x54, 0x5f,
	0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x4d, 0x4d,
	0x41, 0x4e, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x49, 0x4e,
	0x54, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x05, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x4f, 0x4d,
	0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x49,
	0x4e, 0x54, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10,
	0x06, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x52, 0x47,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45,
	0x53, 0x53, 0x10, 0x07, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x77, 0x69, 0x70, 0x69, 0x2f, 0x74, 0x77, 0x69, 0x70, 0x69, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x75, 0x74, 0x2f, 0x74, 0x77, 0x69, 0x63, 0x6d, 0x64, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_twicmd_proto_rawDescOnce sync.Once
	file_twicmd_proto_rawDescData = file_twicmd_proto_rawDesc
)

func file_twicmd_proto_rawDescGZIP() []byte {
	file_twicmd_proto_rawDescOnce.Do(func() {
		file_twicmd_proto_rawDescData = protoimpl.X.CompressGZIP(file_twicmd_proto_rawDescData)
	})
	return file_twicmd_proto_rawDescData
}

var file_twicmd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_twicmd_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_twicmd_proto_goTypes = []interface{}{
	(CommandArgumentHint)(0),           // 0: twicmd.CommandArgumentHint
	(*Service)(nil),                    // 1: twicmd.Service
	(*CommandDescription)(nil),         // 2: twicmd.CommandDescription
	(*CommandArgumentDescription)(nil), // 3: twicmd.CommandArgumentDescription
	(*Command)(nil),                    // 4: twicmd.Command
	(*CommandArgument)(nil),            // 5: twicmd.CommandArgument
	(*ExecuteCommandRequest)(nil),      // 6: twicmd.ExecuteCommandRequest
	(*ExecuteCommandResponse)(nil),     // 7: twicmd.ExecuteCommandResponse
	nil,                                // 8: twicmd.CommandDescription.ArgumentsEntry
	(*twismsproto.Message)(nil),        // 9: twisms.Message
	(*twismsproto.MessageBody)(nil),    // 10: twisms.MessageBody
}
var file_twicmd_proto_depIdxs = []int32{
	2,  // 0: twicmd.Service.commands:type_name -> twicmd.CommandDescription
	8,  // 1: twicmd.CommandDescription.arguments:type_name -> twicmd.CommandDescription.ArgumentsEntry
	0,  // 2: twicmd.CommandArgumentDescription.hint:type_name -> twicmd.CommandArgumentHint
	5,  // 3: twicmd.Command.arguments:type_name -> twicmd.CommandArgument
	4,  // 4: twicmd.ExecuteCommandRequest.command:type_name -> twicmd.Command
	9,  // 5: twicmd.ExecuteCommandRequest.message:type_name -> twisms.Message
	10, // 6: twicmd.ExecuteCommandResponse.body:type_name -> twisms.MessageBody
	3,  // 7: twicmd.CommandDescription.ArgumentsEntry.value:type_name -> twicmd.CommandArgumentDescription
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_twicmd_proto_init() }
func file_twicmd_proto_init() {
	if File_twicmd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_twicmd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twicmd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twicmd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandArgumentDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twicmd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twicmd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandArgument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twicmd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twicmd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_twicmd_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_twicmd_proto_goTypes,
		DependencyIndexes: file_twicmd_proto_depIdxs,
		EnumInfos:         file_twicmd_proto_enumTypes,
		MessageInfos:      file_twicmd_proto_msgTypes,
	}.Build()
	File_twicmd_proto = out.File
	file_twicmd_proto_rawDesc = nil
	file_twicmd_proto_goTypes = nil
	file_twicmd_proto_depIdxs = nil
}
