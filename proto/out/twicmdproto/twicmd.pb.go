// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.24.4
// source: twicmd.proto

package twicmdproto

import (
	twicmdcfgpb "github.com/twipi/twipi/proto/out/twicmdcfgpb"
	twismsproto "github.com/twipi/twipi/proto/out/twismsproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandArgumentHint int32

const (
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_UNSPECIFIED  CommandArgumentHint = 0
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_STRING       CommandArgumentHint = 1
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_NUMBER       CommandArgumentHint = 2
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_INTEGER      CommandArgumentHint = 3
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_PERSON       CommandArgumentHint = 4
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_EMAIL        CommandArgumentHint = 5
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_PHONE_NUMBER CommandArgumentHint = 6
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_ADDRESS      CommandArgumentHint = 7
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_DURATION     CommandArgumentHint = 8
	CommandArgumentHint_COMMAND_ARGUMENT_HINT_DATE         CommandArgumentHint = 9 // ...
)

// Enum value maps for CommandArgumentHint.
var (
	CommandArgumentHint_name = map[int32]string{
		0: "COMMAND_ARGUMENT_HINT_UNSPECIFIED",
		1: "COMMAND_ARGUMENT_HINT_STRING",
		2: "COMMAND_ARGUMENT_HINT_NUMBER",
		3: "COMMAND_ARGUMENT_HINT_INTEGER",
		4: "COMMAND_ARGUMENT_HINT_PERSON",
		5: "COMMAND_ARGUMENT_HINT_EMAIL",
		6: "COMMAND_ARGUMENT_HINT_PHONE_NUMBER",
		7: "COMMAND_ARGUMENT_HINT_ADDRESS",
		8: "COMMAND_ARGUMENT_HINT_DURATION",
		9: "COMMAND_ARGUMENT_HINT_DATE",
	}
	CommandArgumentHint_value = map[string]int32{
		"COMMAND_ARGUMENT_HINT_UNSPECIFIED":  0,
		"COMMAND_ARGUMENT_HINT_STRING":       1,
		"COMMAND_ARGUMENT_HINT_NUMBER":       2,
		"COMMAND_ARGUMENT_HINT_INTEGER":      3,
		"COMMAND_ARGUMENT_HINT_PERSON":       4,
		"COMMAND_ARGUMENT_HINT_EMAIL":        5,
		"COMMAND_ARGUMENT_HINT_PHONE_NUMBER": 6,
		"COMMAND_ARGUMENT_HINT_ADDRESS":      7,
		"COMMAND_ARGUMENT_HINT_DURATION":     8,
		"COMMAND_ARGUMENT_HINT_DATE":         9,
	}
)

func (x CommandArgumentHint) Enum() *CommandArgumentHint {
	p := new(CommandArgumentHint)
	*p = x
	return p
}

func (x CommandArgumentHint) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandArgumentHint) Descriptor() protoreflect.EnumDescriptor {
	return file_twicmd_proto_enumTypes[0].Descriptor()
}

func (CommandArgumentHint) Type() protoreflect.EnumType {
	return &file_twicmd_proto_enumTypes[0]
}

func (x CommandArgumentHint) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandArgumentHint.Descriptor instead.
func (CommandArgumentHint) EnumDescriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{0}
}

// A service that provides commands to be executed.
type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the service. Each service registers its own single-word name,
	// usually the brand name, to be used in this.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The human-readable description of the service.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The list of descriptions of commands that the service provides.
	Commands []*CommandDescription `protobuf:"bytes,2,rep,name=commands,proto3" json:"commands,omitempty"`
	// The URL of the service's icon.
	IconUrl *string `protobuf:"bytes,4,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	// The optional brand color of the service.
	Color *string `protobuf:"bytes,5,opt,name=color,proto3,oneof" json:"color,omitempty"`
	// The optional control panel schema of the service.
	OptionsSchema *twicmdcfgpb.Schema `protobuf:"bytes,6,opt,name=options_schema,json=optionsSchema,proto3,oneof" json:"options_schema,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{0}
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Service) GetCommands() []*CommandDescription {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *Service) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *Service) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

func (x *Service) GetOptionsSchema() *twicmdcfgpb.Schema {
	if x != nil {
		return x.OptionsSchema
	}
	return nil
}

// A description of a command that the service provides.
// It mostly contains human-readable information about the command, but some
// data may be used by the natural language processor.
type CommandDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the slash command.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The human-readable description of the command.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// The map of named arguments that the command accepts.
	Arguments map[string]*CommandArgumentDescription `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The order in which the named arguments are expected.
	// This is only useful for positional parsing.
	// Such a parser must also implement a fallback name=value parser.
	ArgumentPositions []string `protobuf:"bytes,3,rep,name=argument_positions,json=argumentPositions,proto3" json:"argument_positions,omitempty"`
	// Whether the command accepts a trailing argument at the end.
	// The last argument in the positions list is considered trailing.
	// This is only meaningful if argument_positions is set.
	ArgumentTrailing bool `protobuf:"varint,4,opt,name=argument_trailing,json=argumentTrailing,proto3" json:"argument_trailing,omitempty"`
}

func (x *CommandDescription) Reset() {
	*x = CommandDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandDescription) ProtoMessage() {}

func (x *CommandDescription) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandDescription.ProtoReflect.Descriptor instead.
func (*CommandDescription) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{1}
}

func (x *CommandDescription) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommandDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CommandDescription) GetArguments() map[string]*CommandArgumentDescription {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *CommandDescription) GetArgumentPositions() []string {
	if x != nil {
		return x.ArgumentPositions
	}
	return nil
}

func (x *CommandDescription) GetArgumentTrailing() bool {
	if x != nil {
		return x.ArgumentTrailing
	}
	return false
}

// A description of a command argument within a command.
type CommandArgumentDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether the argument is required.
	Required bool `protobuf:"varint,1,opt,name=required,proto3" json:"required,omitempty"`
	// The human-readable description of the argument.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The hint that the parser will use.
	// The NLP will also use it to determine the argument's context.
	Hint CommandArgumentHint `protobuf:"varint,3,opt,name=hint,proto3,enum=twicmd.CommandArgumentHint" json:"hint,omitempty"`
}

func (x *CommandArgumentDescription) Reset() {
	*x = CommandArgumentDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandArgumentDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandArgumentDescription) ProtoMessage() {}

func (x *CommandArgumentDescription) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandArgumentDescription.ProtoReflect.Descriptor instead.
func (*CommandArgumentDescription) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{2}
}

func (x *CommandArgumentDescription) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *CommandArgumentDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CommandArgumentDescription) GetHint() CommandArgumentHint {
	if x != nil {
		return x.Hint
	}
	return CommandArgumentHint_COMMAND_ARGUMENT_HINT_UNSPECIFIED
}

// A request to autocomplete an argument.
// It returns a list of possible values for the given argument sorted by
// relevance.
type ArgumentAutocompleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the service.
	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	// The name of the command.
	Command string `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	// The name of the argument within the command.
	Argument string `protobuf:"bytes,3,opt,name=argument,proto3" json:"argument,omitempty"`
	// The input to autocomplete.
	// If empty, list as many suggestions as possible.
	Input string `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *ArgumentAutocompleteRequest) Reset() {
	*x = ArgumentAutocompleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArgumentAutocompleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArgumentAutocompleteRequest) ProtoMessage() {}

func (x *ArgumentAutocompleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArgumentAutocompleteRequest.ProtoReflect.Descriptor instead.
func (*ArgumentAutocompleteRequest) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{3}
}

func (x *ArgumentAutocompleteRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ArgumentAutocompleteRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ArgumentAutocompleteRequest) GetArgument() string {
	if x != nil {
		return x.Argument
	}
	return ""
}

func (x *ArgumentAutocompleteRequest) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

// The response to an argument autocompletion request.
type ArgumentAutocompleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suggestions []string `protobuf:"bytes,1,rep,name=suggestions,proto3" json:"suggestions,omitempty"`
}

func (x *ArgumentAutocompleteResponse) Reset() {
	*x = ArgumentAutocompleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArgumentAutocompleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArgumentAutocompleteResponse) ProtoMessage() {}

func (x *ArgumentAutocompleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArgumentAutocompleteResponse.ProtoReflect.Descriptor instead.
func (*ArgumentAutocompleteResponse) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{4}
}

func (x *ArgumentAutocompleteResponse) GetSuggestions() []string {
	if x != nil {
		return x.Suggestions
	}
	return nil
}

// A command to be executed sent by the user.
type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service   string             `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Command   string             `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Arguments []*CommandArgument `protobuf:"bytes,3,rep,name=arguments,proto3" json:"arguments,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{5}
}

func (x *Command) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Command) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Command) GetArguments() []*CommandArgument {
	if x != nil {
		return x.Arguments
	}
	return nil
}

// A command argument.
type CommandArgument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CommandArgument) Reset() {
	*x = CommandArgument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandArgument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandArgument) ProtoMessage() {}

func (x *CommandArgument) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandArgument.ProtoReflect.Descriptor instead.
func (*CommandArgument) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{6}
}

func (x *CommandArgument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommandArgument) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// The request sent on the POST /execute endpoint.
type ExecuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command *Command             `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Message *twismsproto.Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ExecuteRequest) Reset() {
	*x = ExecuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest) ProtoMessage() {}

func (x *ExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest.ProtoReflect.Descriptor instead.
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{7}
}

func (x *ExecuteRequest) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ExecuteRequest) GetMessage() *twismsproto.Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// The response sent back to the user after executing a command.
type ExecuteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*ExecuteResponse_Text
	//	*ExecuteResponse_Body
	//	*ExecuteResponse_Status
	Response isExecuteResponse_Response `protobuf_oneof:"response"`
}

func (x *ExecuteResponse) Reset() {
	*x = ExecuteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twicmd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteResponse) ProtoMessage() {}

func (x *ExecuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_twicmd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteResponse.ProtoReflect.Descriptor instead.
func (*ExecuteResponse) Descriptor() ([]byte, []int) {
	return file_twicmd_proto_rawDescGZIP(), []int{8}
}

func (m *ExecuteResponse) GetResponse() isExecuteResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ExecuteResponse) GetText() string {
	if x, ok := x.GetResponse().(*ExecuteResponse_Text); ok {
		return x.Text
	}
	return ""
}

func (x *ExecuteResponse) GetBody() *twismsproto.MessageBody {
	if x, ok := x.GetResponse().(*ExecuteResponse_Body); ok {
		return x.Body
	}
	return nil
}

func (x *ExecuteResponse) GetStatus() string {
	if x, ok := x.GetResponse().(*ExecuteResponse_Status); ok {
		return x.Status
	}
	return ""
}

type isExecuteResponse_Response interface {
	isExecuteResponse_Response()
}

type ExecuteResponse_Text struct {
	// A plain text response.
	// This is the same as the Text field in MessageBody.
	Text string `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type ExecuteResponse_Body struct {
	// A response with a message body.
	Body *twismsproto.MessageBody `protobuf:"bytes,2,opt,name=body,proto3,oneof"`
}

type ExecuteResponse_Status struct {
	// A system response, including errors.
	// These responses may be localized or transformed.
	Status string `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

func (*ExecuteResponse_Text) isExecuteResponse_Response() {}

func (*ExecuteResponse_Body) isExecuteResponse_Response() {}

func (*ExecuteResponse_Status) isExecuteResponse_Response() {}

var File_twicmd_proto protoreflect.FileDescriptor

var file_twicmd_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x74, 0x77, 0x69, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x74, 0x77, 0x69, 0x63, 0x6d, 0x64, 0x1a, 0x0f, 0x74, 0x77, 0x69, 0x63, 0x6d, 0x64, 0x63, 0x66,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x74, 0x77, 0x69, 0x73, 0x6d, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x77, 0x69, 0x63,
	0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12,
	0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x0e, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x77, 0x69, 0x63, 0x6d, 0x64, 0x63, 0x66, 0x67, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x02, 0x52, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x22, 0xd1, 0x02, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x47, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x77, 0x69, 0x63, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x1a, 0x60, 0x0a, 0x0e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x77, 0x69, 0x63, 0x6d,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8b, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x74, 0x77, 0x69, 0x63, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x6e, 0x74, 0x52,
	0x04, 0x68, 0x69, 0x6e, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x1b, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x40, 0x0a, 0x1c, 0x41,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x74, 0x0a,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x35, 0x0a, 0x09,
	0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x74, 0x77, 0x69, 0x63, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x3b, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x66, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x77, 0x69, 0x63, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x29, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x74, 0x77, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x78, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x29, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x74, 0x77, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2a, 0xf5, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x4f,
	0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48,
	0x49, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x52, 0x47,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x49, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41,
	0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x49, 0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d,
	0x42, 0x45, 0x52, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44,
	0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x49, 0x4e, 0x54, 0x5f, 0x49,
	0x4e, 0x54, 0x45, 0x47, 0x45, 0x52, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4d, 0x4d,
	0x41, 0x4e, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x49, 0x4e,
	0x54, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f,
	0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48,
	0x49, 0x4e, 0x54, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x05, 0x12, 0x26, 0x0a, 0x22, 0x43,
	0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x48, 0x49, 0x4e, 0x54, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45,
	0x52, 0x10, 0x06, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41,
	0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x44, 0x44,
	0x52, 0x45, 0x53, 0x53, 0x10, 0x07, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e,
	0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x49, 0x4e, 0x54, 0x5f,
	0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x08, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f,
	0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x48,
	0x49, 0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x09, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x77, 0x69, 0x70, 0x69, 0x2f, 0x74,
	0x77, 0x69, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x75, 0x74, 0x2f, 0x74,
	0x77, 0x69, 0x63, 0x6d, 0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_twicmd_proto_rawDescOnce sync.Once
	file_twicmd_proto_rawDescData = file_twicmd_proto_rawDesc
)

func file_twicmd_proto_rawDescGZIP() []byte {
	file_twicmd_proto_rawDescOnce.Do(func() {
		file_twicmd_proto_rawDescData = protoimpl.X.CompressGZIP(file_twicmd_proto_rawDescData)
	})
	return file_twicmd_proto_rawDescData
}

var file_twicmd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_twicmd_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_twicmd_proto_goTypes = []interface{}{
	(CommandArgumentHint)(0),             // 0: twicmd.CommandArgumentHint
	(*Service)(nil),                      // 1: twicmd.Service
	(*CommandDescription)(nil),           // 2: twicmd.CommandDescription
	(*CommandArgumentDescription)(nil),   // 3: twicmd.CommandArgumentDescription
	(*ArgumentAutocompleteRequest)(nil),  // 4: twicmd.ArgumentAutocompleteRequest
	(*ArgumentAutocompleteResponse)(nil), // 5: twicmd.ArgumentAutocompleteResponse
	(*Command)(nil),                      // 6: twicmd.Command
	(*CommandArgument)(nil),              // 7: twicmd.CommandArgument
	(*ExecuteRequest)(nil),               // 8: twicmd.ExecuteRequest
	(*ExecuteResponse)(nil),              // 9: twicmd.ExecuteResponse
	nil,                                  // 10: twicmd.CommandDescription.ArgumentsEntry
	(*twicmdcfgpb.Schema)(nil),           // 11: twicmdcfg.Schema
	(*twismsproto.Message)(nil),          // 12: twisms.Message
	(*twismsproto.MessageBody)(nil),      // 13: twisms.MessageBody
}
var file_twicmd_proto_depIdxs = []int32{
	2,  // 0: twicmd.Service.commands:type_name -> twicmd.CommandDescription
	11, // 1: twicmd.Service.options_schema:type_name -> twicmdcfg.Schema
	10, // 2: twicmd.CommandDescription.arguments:type_name -> twicmd.CommandDescription.ArgumentsEntry
	0,  // 3: twicmd.CommandArgumentDescription.hint:type_name -> twicmd.CommandArgumentHint
	7,  // 4: twicmd.Command.arguments:type_name -> twicmd.CommandArgument
	6,  // 5: twicmd.ExecuteRequest.command:type_name -> twicmd.Command
	12, // 6: twicmd.ExecuteRequest.message:type_name -> twisms.Message
	13, // 7: twicmd.ExecuteResponse.body:type_name -> twisms.MessageBody
	3,  // 8: twicmd.CommandDescription.ArgumentsEntry.value:type_name -> twicmd.CommandArgumentDescription
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_twicmd_proto_init() }
func file_twicmd_proto_init() {
	if File_twicmd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_twicmd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twicmd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twicmd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandArgumentDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twicmd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArgumentAutocompleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twicmd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArgumentAutocompleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twicmd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twicmd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandArgument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twicmd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twicmd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_twicmd_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_twicmd_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ExecuteResponse_Text)(nil),
		(*ExecuteResponse_Body)(nil),
		(*ExecuteResponse_Status)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_twicmd_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_twicmd_proto_goTypes,
		DependencyIndexes: file_twicmd_proto_depIdxs,
		EnumInfos:         file_twicmd_proto_enumTypes,
		MessageInfos:      file_twicmd_proto_msgTypes,
	}.Build()
	File_twicmd_proto = out.File
	file_twicmd_proto_rawDesc = nil
	file_twicmd_proto_goTypes = nil
	file_twicmd_proto_depIdxs = nil
}
